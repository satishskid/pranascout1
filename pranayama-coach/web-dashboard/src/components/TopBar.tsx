import React, { useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Box,\n  Avatar,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  Chip,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  Menu as MenuIcon,\n  Search,\n  Notifications,\n  AccountCircle,\n  Settings,\n  ExitToApp,\n  MoreVert,\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\n\ninterface TopBarProps {\n  onSidebarToggle: () => void;\n}\n\nconst TopBar: React.FC<TopBarProps> = ({ onSidebarToggle }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const { user, logout } = useAuth();\n  \n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [notificationAnchor, setNotificationAnchor] = useState<null | HTMLElement>(null);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleNotificationOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setNotificationAnchor(event.currentTarget);\n  };\n\n  const handleNotificationClose = () => {\n    setNotificationAnchor(null);\n  };\n\n  const handleLogout = async () => {\n    handleProfileMenuClose();\n    await logout();\n  };\n\n  // Mock notifications\n  const notifications = [\n    {\n      id: 1,\n      title: 'New user registered',\n      description: 'John Doe just joined the platform',\n      time: '2 min ago',\n      unread: true,\n    },\n    {\n      id: 2,\n      title: 'Server maintenance',\n      description: 'Scheduled maintenance at 2 AM EST',\n      time: '1 hour ago',\n      unread: false,\n    },\n    {\n      id: 3,\n      title: 'Premium subscription surge',\n      description: '15% increase in premium signups today',\n      time: '3 hours ago',\n      unread: false,\n    },\n  ];\n\n  const unreadCount = notifications.filter(n => n.unread).length;\n\n  return (\n    <AppBar\n      position=\"static\"\n      elevation={0}\n      sx={{\n        bgcolor: 'background.paper',\n        borderBottom: '1px solid',\n        borderBottomColor: 'divider',\n        color: 'text.primary',\n      }}\n    >\n      <Toolbar sx={{ justifyContent: 'space-between' }}>\n        {/* Left section */}\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={onSidebarToggle}\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          {!isMobile && (\n            <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 600 }}>\n              Dashboard\n            </Typography>\n          )}\n        </Box>\n\n        {/* Center section - Search */}\n        {!isMobile && (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              backgroundColor: 'grey.100',\n              borderRadius: 2,\n              px: 2,\n              py: 1,\n              minWidth: 300,\n              mx: 4,\n            }}\n          >\n            <Search sx={{ color: 'text.secondary', mr: 1 }} />\n            <InputBase\n              placeholder=\"Search users, sessions...\"\n              sx={{ flex: 1 }}\n            />\n          </Box>\n        )}\n\n        {/* Right section */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          {/* System Status */}\n          <Chip\n            label=\"All Systems Operational\"\n            color=\"success\"\n            size=\"small\"\n            sx={{ display: { xs: 'none', sm: 'flex' } }}\n          />\n\n          {/* Notifications */}\n          <IconButton\n            color=\"inherit\"\n            onClick={handleNotificationOpen}\n            sx={{ ml: 1 }}\n          >\n            <Badge badgeContent={unreadCount} color=\"error\">\n              <Notifications />\n            </Badge>\n          </IconButton>\n\n          {/* Profile Menu */}\n          <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>\n            {!isMobile && user && (\n              <Box sx={{ mr: 2, textAlign: 'right' }}>\n                <Typography variant=\"body2\" fontWeight=\"medium\">\n                  {user.name}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {user.role}\n                </Typography>\n              </Box>\n            )}\n            \n            <IconButton\n              onClick={handleProfileMenuOpen}\n              size=\"small\"\n              sx={{ ml: 1 }}\n            >\n              <Avatar sx={{ width: 32, height: 32 }}>\n                {user?.name?.[0] || 'U'}\n              </Avatar>\n            </IconButton>\n          </Box>\n        </Box>\n      </Toolbar>\n\n      {/* Profile Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleProfileMenuClose}\n        onClick={handleProfileMenuClose}\n        PaperProps={{\n          elevation: 3,\n          sx: {\n            mt: 1.5,\n            minWidth: 200,\n            '& .MuiMenuItem-root': {\n              py: 1.5,\n            },\n          },\n        }}\n      >\n        <MenuItem onClick={handleProfileMenuClose}>\n          <AccountCircle sx={{ mr: 2 }} />\n          Profile\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuClose}>\n          <Settings sx={{ mr: 2 }} />\n          Settings\n        </MenuItem>\n        <MenuItem onClick={handleLogout} sx={{ color: 'error.main' }}>\n          <ExitToApp sx={{ mr: 2 }} />\n          Logout\n        </MenuItem>\n      </Menu>\n\n      {/* Notifications Menu */}\n      <Menu\n        anchorEl={notificationAnchor}\n        open={Boolean(notificationAnchor)}\n        onClose={handleNotificationClose}\n        PaperProps={{\n          elevation: 3,\n          sx: {\n            mt: 1.5,\n            maxWidth: 360,\n            maxHeight: 400,\n          },\n        }}\n      >\n        <Box sx={{ p: 2, borderBottom: '1px solid', borderColor: 'divider' }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\">\n            Notifications\n          </Typography>\n        </Box>\n        \n        {notifications.map((notification) => (\n          <MenuItem\n            key={notification.id}\n            onClick={handleNotificationClose}\n            sx={{\n              flexDirection: 'column',\n              alignItems: 'stretch',\n              py: 2,\n              borderBottom: '1px solid',\n              borderColor: 'divider',\n              '&:last-child': {\n                borderBottom: 'none',\n              },\n            }}\n          >\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n              <Typography\n                variant=\"subtitle2\"\n                fontWeight={notification.unread ? 'bold' : 'medium'}\n              >\n                {notification.title}\n              </Typography>\n              {notification.unread && (\n                <Box\n                  sx={{\n                    width: 8,\n                    height: 8,\n                    borderRadius: '50%',\n                    bgcolor: 'primary.main',\n                  }}\n                />\n              )}\n            </Box>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n              {notification.description}\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {notification.time}\n            </Typography>\n          </MenuItem>\n        ))}\n        \n        <Box sx={{ p: 2, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"primary.main\" sx={{ cursor: 'pointer' }}>\n            View all notifications\n          </Typography>\n        </Box>\n      </Menu>\n    </AppBar>\n  );\n};\n\nexport default TopBar;