import React from 'react';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Box,\n  Avatar,\n  Divider,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  Dashboard,\n  People,\n  SelfImprovement,\n  Analytics,\n  Settings,\n  Logout,\n} from '@mui/icons-material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\ninterface SidebarProps {\n  open: boolean;\n  onToggle: () => void;\n}\n\nconst drawerWidth = 280;\n\nconst menuItems = [\n  {\n    text: 'Dashboard',\n    icon: <Dashboard />,\n    path: '/dashboard',\n  },\n  {\n    text: 'Users',\n    icon: <People />,\n    path: '/users',\n  },\n  {\n    text: 'Sessions',\n    icon: <SelfImprovement />,\n    path: '/sessions',\n  },\n  {\n    text: 'Analytics',\n    icon: <Analytics />,\n    path: '/analytics',\n  },\n  {\n    text: 'Settings',\n    icon: <Settings />,\n    path: '/settings',\n  },\n];\n\nconst Sidebar: React.FC<SidebarProps> = ({ open, onToggle }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user, logout } = useAuth();\n\n  const handleNavigation = (path: string) => {\n    navigate(path);\n    if (isMobile) {\n      onToggle();\n    }\n  };\n\n  const handleLogout = async () => {\n    await logout();\n  };\n\n  const drawerContent = (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <Box\n        sx={{\n          p: 3,\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          color: 'white',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <Avatar\n            sx={{\n              width: 50,\n              height: 50,\n              bgcolor: 'rgba(255, 255, 255, 0.2)',\n              mr: 2,\n            }}\n          >\n            <SelfImprovement />\n          </Avatar>\n          <Box>\n            <Typography variant=\"h6\" fontWeight=\"bold\">\n              Pranayama Coach\n            </Typography>\n            <Typography variant=\"caption\" sx={{ opacity: 0.8 }}>\n              Admin Dashboard\n            </Typography>\n          </Box>\n        </Box>\n        \n        {user && (\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Avatar sx={{ width: 32, height: 32, mr: 1, bgcolor: 'rgba(255, 255, 255, 0.2)' }}>\n              {user.name?.[0]}\n            </Avatar>\n            <Box>\n              <Typography variant=\"body2\" fontWeight=\"medium\">\n                {user.name}\n              </Typography>\n              <Typography variant=\"caption\" sx={{ opacity: 0.8 }}>\n                {user.role}\n              </Typography>\n            </Box>\n          </Box>\n        )}\n      </Box>\n\n      {/* Navigation */}\n      <Box sx={{ flexGrow: 1, py: 2 }}>\n        <List>\n          {menuItems.map((item) => {\n            const isActive = location.pathname === item.path;\n            return (\n              <ListItem key={item.text} disablePadding sx={{ px: 2 }}>\n                <ListItemButton\n                  onClick={() => handleNavigation(item.path)}\n                  sx={{\n                    borderRadius: 2,\n                    mb: 0.5,\n                    backgroundColor: isActive\n                      ? 'rgba(102, 126, 234, 0.1)'\n                      : 'transparent',\n                    color: isActive ? '#667eea' : 'inherit',\n                    '&:hover': {\n                      backgroundColor: isActive\n                        ? 'rgba(102, 126, 234, 0.15)'\n                        : 'rgba(0, 0, 0, 0.04)',\n                    },\n                  }}\n                >\n                  <ListItemIcon\n                    sx={{\n                      color: isActive ? '#667eea' : 'inherit',\n                      minWidth: 40,\n                    }}\n                  >\n                    {item.icon}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={item.text}\n                    primaryTypographyProps={{\n                      fontWeight: isActive ? 600 : 400,\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Box>\n\n      {/* Footer */}\n      <Box sx={{ p: 2 }}>\n        <Divider sx={{ mb: 2 }} />\n        <ListItemButton\n          onClick={handleLogout}\n          sx={{\n            borderRadius: 2,\n            color: 'error.main',\n            '&:hover': {\n              backgroundColor: 'rgba(244, 67, 54, 0.04)',\n            },\n          }}\n        >\n          <ListItemIcon sx={{ color: 'error.main', minWidth: 40 }}>\n            <Logout />\n          </ListItemIcon>\n          <ListItemText primary=\"Logout\" />\n        </ListItemButton>\n        \n        <Typography\n          variant=\"caption\"\n          color=\"text.secondary\"\n          sx={{ display: 'block', textAlign: 'center', mt: 2 }}\n        >\n          Â© 2025 Pranayama Coach\n        </Typography>\n      </Box>\n    </Box>\n  );\n\n  if (isMobile) {\n    return (\n      <Drawer\n        variant=\"temporary\"\n        open={open}\n        onClose={onToggle}\n        ModalProps={{\n          keepMounted: true,\n        }}\n        sx={{\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: drawerWidth,\n          },\n        }}\n      >\n        {drawerContent}\n      </Drawer>\n    );\n  }\n\n  return (\n    <Drawer\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={open}\n      sx={{\n        width: open ? drawerWidth : 0,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: '2px 0 8px rgba(0,0,0,0.1)',\n        },\n      }}\n    >\n      {drawerContent}\n    </Drawer>\n  );\n};\n\nexport default Sidebar;